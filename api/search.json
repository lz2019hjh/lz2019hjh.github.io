[{"id":"3d2c5c7960ec6793ef436770379d7929","title":"python3安装及编辑器选择","content":"前言\n看了一眼新发来的信息书,居然变成教python3了,皆大欢喜\n\n|安装windows点击下载python3.8.4 安装包,官网下载较慢,这里使用淘宝源\n找到下载目录\n打开安装包\n点击\b右下角Add python 3.8 to PATH\n\n然后再点击\n\n等待安装\n完成后点击\n\n然后点击右下角close\n在开始菜单栏中找到\n\n然后就是大名鼎鼎的蜗牛python3\nmac$ brew install pyhton\n\nlinux$ sudo apt-get install python\n\n安装编辑器这里选择vscode\n点击下载vscode\n\n点击我同意此协议\n然后点击下一步直到出现\n\n将所有都钩上\n点击下一步然后安装\n等一会\n然后就安装完了\n一些插件安装,见 https://lz2019hjh.github.io/2020/03/09/2020-03-09-c++入门-编辑器选择/#关于c-编辑器选择\n然后再安装一个python的插件，搜索python，安装第一个。\n然后就可以快乐使用python3了。\n","slug":"python3安装及编辑器选择","date":"2020-09-06T07:46:18.000Z","categories_index":"","tags_index":"python","author_index":"lz2019hjh"},{"id":"7e1929d55b61f105c4d8a10a17d0739c","title":"github 使用进阶","content":"前言\ngithub作为一个标准的国外网站；总是会被各种“墙”和“封”有一种办法可以比较稳定的使用github;在一定程度上还能提速一点\n\nStart使用https://www.ipaddress.com/查询以下网址的真是IP地址\ngist.github.com\ngithub.com\nwww.github.com\napi.github.com\navatars0.githubusercontent.com\navatars1.githubusercontent.com\navatars2.githubusercontent.com\navatars3.githubusercontent.com\navatars4.githubusercontent.com\navatars5.githubusercontent.com\navatars6.githubusercontent.com\navatars7.githubusercontent.com\navatars8.githubusercontent.com\ncamo.githubusercontent.com\ncloud.githubusercontent.com\ngist.githubusercontent.com\nmarketplace-screenshots.githubusercontent.com\nraw.githubusercontent.com\nrepository-images.githubusercontent.com\nuser-images.githubusercontent.com\n\n然后将其改为\nIP + 域名的格式\n\n以下是我查出来的结果\n140.82.112.4 gist.github.com\n140.82.114.4 github.com\n140.82.112.4 www.github.com\n140.82.113.5 api.github.com\n199.232.68.133 avatars0.githubusercontent.com\n199.232.68.133 avatars1.githubusercontent.com\n199.232.68.133 avatars2.githubusercontent.com\n199.232.68.133 avatars3.githubusercontent.com\n199.232.68.133 avatars4.githubusercontent.com\n199.232.68.133 avatars5.githubusercontent.com\n199.232.68.133 avatars6.githubusercontent.com\n199.232.68.133 avatars7.githubusercontent.com\n199.232.68.133 avatars8.githubusercontent.com\n199.232.68.133 camo.githubusercontent.com\n199.232.68.133 cloud.githubusercontent.com\n199.232.68.133 gist.githubusercontent.com\n199.232.68.133 marketplace-screenshots.githubusercontent.com\n199.232.68.133 raw.githubusercontent.com\n199.232.68.133 repository-images.githubusercontent.com\n199.232.68.133 user-images.githubusercontent.com\n\nThen打开hosts文件,在文件末尾处添加上述内容\n\nMac/linux 上在/etc/hosts\n\nWindows 上在C:\\Windows\\System32\\drivers\\etc\n  注意:一定要管理员权限!!!!!!!\n\n\nFinally直接重启一波;然后就OK了\n","slug":"github-使用进阶","date":"2020-08-31T09:14:42.000Z","categories_index":"","tags_index":"-github","author_index":"lz2019hjh"},{"id":"8ecb1767a97bb9668532489152ada825","title":"ubuntu linux 使用","content":"前言\nubuntu虽然是最有好的linux之一，但还是有有一些设置需要改\n\n换源默认的源速度感人\n终端输入\n$ sudo cp /etc/apt/sources.list /etc/apt/sources.list.asd # 备份官方源\n$ sudo rm /etc/apt/sources.list # 删除官方源\n$ sudo apt-get install vim #\b 安装vim\n$ sudo vim /etc/apt/sources.list # 创建并编辑软件源文件\n$ # 输入`i`,然后将对应版本的软件源配置(见下)复制进去,然后按 `esc` 输入`:wq`\n$ sudo apt update # 刷新软件源\n$ sudo apt upgrade # 更新\n安装日常使用软件$ sudo apt-get install wget curl gcc git python make openssh-server # 日常工具\n$ wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb # 下载google浏览器\n$ sudo dpkg -i google-chrome-stable_current_amd64.deb # 安装google浏览器\n$ wget https://vscode.cdn.azure.cn/stable/a0479759d6e9ea56afa657e454193f72aef85bd0/code_1.48.2-1598353430_amd64.deb # 下载vscode\n$ sudo dpkg -i code_1.48.2-1598353430_amd64.deb # 安装vscode\n$ sudo apt-get install http://d1.music.126.net/dmusic/netease-cloud-music_1.2.1_amd64_ubuntu_20190428.deb # 安装网易云音乐\n$ sudo dpkg -i netease-cloud-music_1.2.1_amd64_ubuntu_20190428.deb\n$ wget https://wdl1.cache.wps.cn/wps/download/ep/Linux2019/9615/wps-office_11.1.0.9615_amd64.deb # 下载WPS office\n$ sudo dpkg -i wps-office_11.1.0.9615_amd64.deb # 安装WPS office\n\nsources.list\n使用网易源\n\n\nubuntu 14.04\n\ndeb http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse\n\n\nubuntu 16.04\n\ndeb http://mirrors.163.com/ubuntu/ xenial main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ xenial main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ xenial-updates main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ xenial-updates main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ xenial-backports main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ xenial-backports main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ xenial-security main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ xenial-security main restricted universe multiverse\n\n\nubuntu 18.04\n\ndeb http://mirrors.163.com/ubuntu/ bionic main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ bionic main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ bionic-updates main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ bionic-updates main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ bionic-backports main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ bionic-backports main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ bionic-security main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ bionic-security main restricted universe multiverse\n\n\nubuntu 20.04\n\ndeb http://mirrors.163.com/ubuntu/ focal main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ focal main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ focal-updates main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ focal-updates main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ focal-backports main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ focal-backports main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ focal-security main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ focal-security main restricted universe multiverse\n","slug":"ubuntu-linux-使用","date":"2020-08-30T14:34:04.000Z","categories_index":"","tags_index":"linux,ubuntu","author_index":"lz2019hjh"},{"id":"93610e0c654a34874d380fa1a1ce3b2d","title":"Homebrew的安装与使用","content":"前言\nHomebrew是一款自由及开放源代码的软件包管理系统，用以简化macOS系统上的软件安装过程，最初由马克斯·霍威尔（Max Howell）写成。因其可扩展性得到了一致好评，而在Ruby on Rails社区广为人知。Homebrew使用GitHub，通过用户的贡献扩大对软件包的支持。2012年，Homebrew是GitHub上拥有最多新贡献者的项目。2013年，Homebrew同时成为GitHub上最多贡献者及最多已关闭问题的项目。\n\n以上来自https://zh.wikipedia.org/wiki/Homebrew的介绍\n注意这里将官方的方法加以改进，使用清华大学的brew镜像\n由linux上Homebrew并不是官方linux的归档软件包的管理工具，在此篇文章中不介绍\n运行brew时不需要加sudo！！！！！\n安装纯命令行\n$ curl https://gitee.com/lz2019hjh/lz2019hjh/raw/master/doc/install_brew.sh -o install_brew.sh\n$ chmod +x install_brew.sh\n$ ./install_brew.sh\n\n只需等待完成就好了\n换源\n$ curl https://gitee.com/lz2019hjh/lz2019hjh/raw/master/doc/update_brew.sh -o update_brew.sh\n$ chmod +x update_brew.sh\n$ ./update_brew.sh\n","slug":"Homebrew的安装与使用","date":"2020-08-23T16:00:00.000Z","categories_index":"","tags_index":"mac,Homebrew","author_index":"lz2019hjh"},{"id":"dac023327b3074169eff25e09c8e12e1","title":"OBS下载及使用","content":"前言\nOBS作为一个nb，免费，开源，全能的软件，强烈建议使用!\n\ninstall for windows点击下载\n可能有点慢，强烈建议使用迅雷下载\n点击安装包\n\n然后一直按回车就可以了\ninstall for mac点击下载\n打开后看到\n\n将\n\n拖到\n\n就装完了\ninstall for ubuntu终端输入\n$ sudo add-apt-repository ppa:obsproject/obs-studio\n$ sudo apt update\n$ sudo apt upgrade\n$ sudo apt-get install obs-studio\n\n对于kali linux忽略第一行加仓库的命令。\nHow to use OBS无论使用什么方式打开OBS\n\n找到最下面的来源\n点击下方+号\n点击\n\n再次点击+号\n依次添加\n\n这样就可以见到无限递归了\n\n点击最右边的设置\n找到输出，将录制格式改为mp4\n找到热键，添加开始录制和结束录制的快捷键\n\n调整一波图像\n按下ctrl + shift + B\n播放你的ppt,介绍你的新闻\n按下ctrl + shift + E\n结束录制\nWhere is the filewindows打开目录C:\\Users\\你的用户\\Videos\nmac终端输入\nopen ~/Movies/\n就可以看到文件了\n展示一下我的\n","slug":"OBS下载及使用","date":"2020-08-22T16:00:00.000Z","categories_index":"","tags_index":"OBS,lz2019hjh","author_index":"lz2019hjh"},{"id":"739710610d606ac378ad2f98579da6a4","title":"vmware安装ubuntu","content":"如果是一个合格的电脑作死玩家，就一定要会使用虚拟机进行进一步作死一些日常工作。\n之前已经介绍过如何用vmware安装windows10，于是为了尝试一下linux，我进行了进一步作死\n然后作为一个菜鸡，只能玩玩入门级的ubuntu linux了\n材料准备\n一台装有vmware的mac\nubuntu系统镜像网易镜像站下载地址，和windows7镜像msdn下载实在不行，有windows10的也行，不过在安装windows的时候要花更多时间\n时间(一个小时左右)\n\n思路首先，经过我多年的经验，vmware安装ubuntu一定无法获得很好的清晰度。然而，windows却有，所以我们可以用ubuntu覆盖windows。\n开始windows安装选择镜像文件\n点击继续\n\n因为不需要使用这台windows所以账户名，密码乱填都可以。我在这里使用专业版\n\n再点击继续，跳出来叫你输入密匙直接不输入并继续使用\n\n然后点击右边那个更加独立\n再点击继续\n\n点击自定设置,然后保存好虚拟机\n\n然后跳出\n\n先改处理器和内存\n改成这样\n\n显示器改成这样\n\n然后将硬盘改成\n\n其他可以不用改，关闭这个窗口，然后打开虚拟机\n\n安装中…\n\n\n等它安装完vmware tools以后将其关机\n经过40min的奋斗，终于安装完了windows7\n\n关机，然后打开设置，将软盘移除(没啥卵用)\n然后点击CD/DVD(SATA)点击\n\n将下拉框拉到下面那个\n\n选择你下载的ubuntu镜像，点击打开\n然后点击显示全部回到主页面\n点击的三行的启动磁盘\n\n选择从CD/DVD启动\n\n正常的ubuntu启动\n\nubuntu20.04专有\n打开ubuntu安装界面\n\n左边是语言，我这边选择中文（简体），点击右侧的安装Ubuntu\n\n点击继续\n\n自己选择选项，然后点击继续\n安装类型选择清除整个磁盘\n\n然后点击现在安装\n\n点击继续\n\n再点击继续\n然后是注册\n\n注册完了以后点击继续\n就开始了安装\nwaiting……\n\n在ubuntu18.04开始，安装时会自动安装vmware tools\n\n点击现在重启\n过程中，可能会让你按回车\n重启完就可以欢乐使用ubuntu了。\n登陆后\n\n不停点右上角的按钮\n接下去是安装vmware tools\n在命令行里输入\nopen &#x2F;Applications&#x2F;VMware\\ Fusion.app&#x2F;Contents&#x2F;Library&#x2F;isoimages \n\n然后找到linux.iso复制到桌面。\n将~/Desktop/linux.iso这个文件连接到虚拟机。\n\n点击那个光盘\n将里面那个压缩包打开，解压到桌面\n然后打开目录\n\n在终端里打开\n输入sudo ./vmware*.pl\n输入密码后\n\n输入yes然后回车。\n接下去只要不停按回车\n然后你会发现\n\n加载出来了\n然后打开设置\n点击显示器\n\n将100%改为200%点击右上角的应用，然后点击保留更改。\n这样就可以快乐使用ubuntu了。\n在下一篇文章中，会介绍ubuntu的优化及设置。\n","slug":"vmware安装ubuntu","date":"2020-08-07T16:00:00.000Z","categories_index":"","tags_index":"虚拟机,linux,ubuntu","author_index":"lz2019hjh"},{"id":"ea79591252cabd2deb769f15fe5647b2","title":"小恐龙自动跳","content":"\n废话不多说，直接上代码\n\nfunction TrexRunnerBot() &#123;\n\nconst makeKeyArgs = (keyCode) => &#123;\nconst preventDefault = () => void 0;\nreturn &#123;keyCode, preventDefault&#125;;\n&#125;;\n\nconst upKeyArgs = makeKeyArgs(38);\nconst downKeyArgs = makeKeyArgs(40);\nconst startArgs = makeKeyArgs(32);\n\nif (!Runner().playing) &#123;\nRunner().onKeyDown(startArgs);\nsetTimeout(() => &#123;\nRunner().onKeyUp(startArgs);\n&#125;, 500);\n&#125;\n\nfunction conquerTheGame() &#123;\nif (!Runner || !Runner().horizon.obstacles[0]) return;\n\nconst obstacle = Runner().horizon.obstacles[0];\n\nif (obstacle.typeConfig &amp;&amp; obstacle.typeConfig.type === 'SNACK') return;\n\nif (needsToTackle(obstacle) &amp;&amp; closeEnoughToTackle(obstacle)) tackle(obstacle);\n&#125;\n\nfunction needsToTackle(obstacle) &#123;\nreturn obstacle.yPos !== 50;\n&#125;\n\nfunction closeEnoughToTackle(obstacle) &#123;\nreturn obstacle.xPos &lt;= Runner().currentSpeed * 18;\n&#125;\n\nfunction tackle(obstacle) &#123;\nif (isDuckable(obstacle)) &#123;\nduck();\n&#125; else &#123;\njumpOver(obstacle);\n&#125;\n&#125;\n\nfunction isDuckable(obstacle) &#123;\nreturn obstacle.yPos === 50;\n&#125;\n\nfunction duck() &#123;\nRunner().onKeyDown(downKeyArgs);\n\nsetTimeout(() => &#123;\nRunner().onKeyUp(downKeyArgs);\n&#125;, 500);\n&#125;\n\nfunction jumpOver(obstacle) &#123;\nif (isNextObstacleCloseTo(obstacle))\njumpFast();\nelse\nRunner().onKeyDown(upKeyArgs);\n&#125;\n\nfunction isNextObstacleCloseTo(currentObstacle) &#123;\nconst nextObstacle = Runner().horizon.obstacles[1];\n\nreturn nextObstacle &amp;&amp; nextObstacle.xPos - currentObstacle.xPos &lt;= Runner().currentSpeed * 42;\n&#125;\n\nfunction jumpFast() &#123;\nRunner().onKeyDown(upKeyArgs);\nRunner().onKeyUp(upKeyArgs);\n&#125;\n\nreturn &#123;conquerTheGame: conquerTheGame&#125;;\n&#125;\n\nlet bot = TrexRunnerBot();\nlet botInterval = setInterval(bot.conquerTheGame, 2);\n\n","slug":"小恐龙自动跳","date":"2020-05-16T16:00:00.000Z","categories_index":"","tags_index":"chrome","author_index":"lz2019hjh"},{"id":"4c372faf856b44197c1ff7a37e0f75a8","title":"我眼中的丽泽","content":"我眼中的丽泽\n目录\n美丽的校园\n丰富的校园生活\n超好的老师\n最后\n\n\n\nBeautiful school丽泽书院,坐落在湖海塘畔,目前在金一中内上课,下面是一段来自我们学校同学对我们学校的描写\n\nThe school is so attractive that I like it so much. There is a classroom building surround by water on three sides. A sports hall that can shelter us from the wind and rain is in front of dining hall. you will see a big playground on your right when you walk out of the classroom building…\n\n这段话大概是在说\n\n这所学校很吸引人，我非常喜欢它。教学楼三面环水。饭厅前有一个能遮风挡雨的运动。当你走出教学楼时，你会看到一个大操场在你的右边…\n\n十分生动而又细致的描写\n不过我们的学校才不仅如此，还有更为丰富的校园生活。\n下面是我们的教学楼图片\n\n\n\nInteresting school life我们学校的校园生活充实而又丰富，在保证学业的同时，每天至少有一个小时的运动，我们有趣的体育老师——化哥\n\n\n相信所有同学们在体育课上一定被”嘟”折腾过吧，没错，就是20个来回的折返跑。\n还有我们的生活胡老师，天天晚上不知道要查多少次寝，不过一些同学特意等到老师不再查寝然后开始……。\n四人一个的寝室，特别有趣，有时谁没有好好值日，寝室扣分了，那可能就是剩下三人的惩罚，是“体罚”还是罚值日，可能各个寝室都有自己的一套吧。\n还有那赫赫有名的食堂，有三个食堂，不是价格实惠，就是味道美味，当年可能想来丽泽的一大理由就是食堂吧，想想都流口水。\n\n\nVery good teachers你是否感受过，数学老师在黑板上画圆不用圆规却圆的不得了\n\n\n\n\n\n\n你是否感受过，社会老师课件里出现了“抖音”\n你没有听错，这就是我们的老师，经常让我们佩服的五体投地，让我们捧腹大笑。\n对作业本上那一个一个大❌的详细解释，认真听取学生的意见和解题思路。\n还有整个学校都证不出的神仙证明题在数学老师手下就变成了“几个全等三角形加几条线的组合”\n\n\n\n\nPPT上那诱人的美食，难怪某同学给社会老师起名“美食主播” \n\n\n\n\n还有我们那和蔼可亲的胖校长，相信同学们一定知道什么叫做“作业最少的学校”\n还有……\n\n\nThe end这就是我们的学校——丽泽书院\n一所美丽而又有趣的学校\nby lz2019hjh\n","slug":"我眼中的丽泽","date":"2020-05-01T16:00:00.000Z","categories_index":"","tags_index":"作业","author_index":"lz2019hjh"},{"id":"1c6b9a724a952c9dfdd44f2379b0789f","title":"mac上利用vmware安装windows10","content":"\n相信用苹果电脑的小伙伴们一定会被mac上一些应用的缺少或者不习惯而想装上windows对吧,再不换电脑的情况下解决方案有两个双系统与虚拟机,在我看来,虚拟机会比双系统效率与性能更强,安装更方便.\n\n工具及软件准备一台装有mac的电脑,vmware和windows10的镜像文件\n材料收集vmware官方下载网址\nwindows10镜像文件官方下载网址自己找一个适合自己的版本下载\n\n上述文件下载很慢很慢,可以使用迅雷下载之类的方法加速\n\n激活vmware网上有很多激活码,随便尝试几个,总有可以的\n我用的是\nXKZYV-PK9CC-A1Y0X-K5HZL-Y65ZV\n\n现在不一定还可以用\n开始安装windows10\n然后点击新建\n会出现\n\n打开你Windows10镜像文件的下载目录\n接下去将文件拖到窗口里\n点击继续\n然后可以看见\n\n写好账户名和密码\n然后选择你的windows10版本\n我用的是windows10 pro Education\n\n然后点击继续\n\n点击 \n然后点击 \n还是点击继续\n接下去，进行一些虚拟机的配置\n点击\n保存好你的虚拟机命名\n\n点击储存\n然后会跳出\n\n强烈建议将内存开到4096MB,因为windows10有点大。\n点击\n看到\n\n改为\n\n然后点击显示全部\n点击\n在点击高级选项\n将拆分为多个文件，点掉，大小自己改\n最后\n\n长这样\n然后就可以启动虚拟机了\n\n点击中间的三角形\n接下去就只要坐等一段时间\n\n\n\n\n\n这样就装完了\n接下去，我们来激活windows10吧\n方法很多（不花钱），下面我介绍一种我成功的（貌似是永久的）\n点击下载\n解压后\n在共享文件夹中打开\n\n复制到桌面\n管理员运行Activation.cmd\n\n按回车。\n\n按1\n等一会就可以激活了\n\n这样就可以快乐使用windows10\n","slug":"mac上利用vmware安装windows10","date":"2020-03-28T16:00:00.000Z","categories_index":"","tags_index":"虚拟机,windows10","author_index":"lz2019hjh"},{"id":"3924dc4d6ba6b352bc2a87932d450bc9","title":"c++入门之环境配置","content":"前言\n在使用vscode的时候你可能会遇到没有g++环境的问题,这时候你就需要配置环境\n\n关于c++编译环境配置windows部分首先你得有一个mingw库,如果你有了Dev-c++,因该就有了,打开Dev-c++软件所在的安装目录\n下面以windows 10为例,windows 7好像差不多？\n默认安装在C:\\Program File (x86)\\Dev-Cpp,你可进入这个文件夹\n你会看到\n\n打开那个选中的目录\n你又会看到\n\n点击进入bin,你会看到以下东西\n\n有一个叫做g++的东西,这就是我们要的编辑器\n复制当前的文件夹的目录\n默认是C:\\Program File (x86)\\Dev-Cpp\\MinGW64\\bin\n然后你就可以关闭这个东西了\n打开控制面板\n\n在右上角的搜索控制面板里搜索PATH\n\n点开编辑系统环境变量\n\n点击右下角的环境变量(N)...\n在上面那个XXX的用户变量(U)\n\n看看左边这一栏变量里有没有Path\n没有新建一个,点击新建(N)...,注意是上面那个!!!\n然后在变量名里写Path\n变量值里写刚刚复制的文件目录C:\\Program File (x86)\\Dev-Cpp\\MinGW64\\bin\n然后点击确认\n如果有,双击点开Path,会看到\n\n点击最上面的新建(N)\n在跳出的文本框里输入刚刚复制的文件目录C:\\Program File (x86)\\Dev-Cpp\\MinGW64\\bin\n写好后点击确定,关闭窗口后点再次点击确认,然后点击应用(A)...\n然后g++环境就有了,之类也有了.\n打开cmd或powershell\n输入g++\n如果出现\ng++: fatal error: no input files\ncompilation terminated.\n\n就说明有了\n然后g++指令如下\n\n\n\n指令\n作用\n\n\n\ng++ asd.cpp -o asd\n将源程序编译成asd.cpp编译成asd\n\n\ng++ asd.cpp -o asd -std=c++11\n用c++11编译\n\n\ng++ asd.cpp -o asd -o2 -lm\n打开o2和lm优化\n\n\n…\n…\n\n\n指令只可以重叠，比如说你可以g++ asd.cpp -o asd -o -lm -std=c++11\n表示将asd.cpp打开o2,lm,用c++11编译成asd\n结合上面猜一猜作用\nwindows部分结束\nmac部分如果你有了xcode你就有了一个叫做clang或clang++的编译器,他会伪装成g++,gcc\n当你在终端里输入g++时\nclang: error: no input files\n\n出现以上说明你有g++了\nzsh: command not found: g++\n\n说明没有\n在命令行里输入\nxcode-select --install\n\n会跳出一个窗口\n点击安装\n你也就拥有g++了,不过可能没有#include&lt;bits/stdc++.h&gt;需要手动配置\n打开/Library/Developer/CommandLineTools/usr/include/c++/v1这个目录\n创建文件夹bits\n进入bits，并在其中创建文件stdc++.h\n在里面写入\n// C++ includes used for precompiling -*- C++ -*-\n\n// Copyright (C) 2003-2014 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// Under Section 7 of GPL version 3, you are granted additional\n// permissions described in the GCC Runtime Library Exception, version\n// 3.1, as published by the Free Software Foundation.\n\n// You should have received a copy of the GNU General Public License and\n// a copy of the GCC Runtime Library Exception along with this program;\n// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n// &lt;http://www.gnu.org/licenses/&gt;.\n\n/** @file stdc++.h\n*  This is an implementation file for a precompiled header.\n*/\n\n// 17.4.1.2 Headers\n\n// C\n#ifndef _GLIBCXX_NO_ASSERT\n#include &lt;cassert&gt;\n#endif\n#include &lt;cctype&gt;\n#include &lt;cerrno&gt;\n#include &lt;cfloat&gt;\n#include &lt;ciso646&gt;\n#include &lt;climits&gt;\n#include &lt;clocale&gt;\n#include &lt;cmath&gt;\n#include &lt;csetjmp&gt;\n#include &lt;csignal&gt;\n#include &lt;cstdarg&gt;\n#include &lt;cstddef&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstdlib&gt;\n#include &lt;cstring&gt;\n#include &lt;ctime&gt;\n\n#if __cplusplus &gt;= 201103L\n#include &lt;ccomplex&gt;\n#include &lt;cfenv&gt;\n#include &lt;cinttypes&gt;\n#include &lt;cstdbool&gt;\n#include &lt;cstdint&gt;\n#include &lt;ctgmath&gt;\n#include &lt;cwchar&gt;\n#include &lt;cwctype&gt;\n#endif\n\n// C++\n#include &lt;algorithm&gt;\n#include &lt;bitset&gt;\n#include &lt;complex&gt;\n#include &lt;deque&gt;\n#include &lt;exception&gt;\n#include &lt;fstream&gt;\n#include &lt;functional&gt;\n#include &lt;iomanip&gt;\n#include &lt;ios&gt;\n#include &lt;iosfwd&gt;\n#include &lt;iostream&gt;\n#include &lt;istream&gt;\n#include &lt;iterator&gt;\n#include &lt;limits&gt;\n#include &lt;list&gt;\n#include &lt;locale&gt;\n#include &lt;map&gt;\n#include &lt;memory&gt;\n#include &lt;new&gt;\n#include &lt;numeric&gt;\n#include &lt;ostream&gt;\n#include &lt;queue&gt;\n#include &lt;set&gt;\n#include &lt;sstream&gt;\n#include &lt;stack&gt;\n#include &lt;stdexcept&gt;\n#include &lt;streambuf&gt;\n#include &lt;string&gt;\n#include &lt;typeinfo&gt;\n#include &lt;utility&gt;\n#include &lt;valarray&gt;\n#include &lt;vector&gt;\n\n#if __cplusplus &gt;= 201103L\n#include &lt;array&gt;\n#include &lt;atomic&gt;\n#include &lt;chrono&gt;\n#include &lt;condition_variable&gt;\n#include &lt;forward_list&gt;\n#include &lt;future&gt;\n#include &lt;initializer_list&gt;\n#include &lt;mutex&gt;\n#include &lt;random&gt;\n#include &lt;ratio&gt;\n#include &lt;regex&gt;\n#include &lt;scoped_allocator&gt;\n#include &lt;system_error&gt;\n#include &lt;thread&gt;\n#include &lt;tuple&gt;\n#include &lt;typeindex&gt;\n#include &lt;type_traits&gt;\n#include &lt;unordered_map&gt;\n#include &lt;unordered_set&gt;\n#endif\n\nlinux部分debian系的,在终端里输入\nsudo apt-get install g++\n\n完成\n","slug":"c++之环境配置","date":"2020-03-10T16:00:00.000Z","categories_index":"","tags_index":"c++","author_index":"lz2019hjh"},{"id":"a2617741e21e242b539d75c1341c8079","title":"c++入门之编辑器选择","content":"前言\n最近几年来，信息奥林匹克竞赛一直很受大家关注，目前还支持的语言有 pascal,c,c++,在2022那以后，貌似pascal,c都要被取消了，如果你刚刚入坑，你还是学c++吧。\n\n关于c++编辑器选择windows部分对于刚刚开始学习c++的人，只推荐一个代码编辑器叫Dev-c++\n下面是几张Dev-c++的图\n官网\n\n\n\n\n\n\n\n\n\n几个常用快捷键ctrl+n新建\nF11编译运行\n可能有些计算机要fn+F11\n注意Dev-c++不是跨平台的,只能在windows上用\nvscode\n当你会觉得Dev-c++好丑，不好用时,这时你需要下载一个全新的，完全不一样的代码编辑器vscode,这可能并不是只为c++而生的编辑器，而是支持大部分语言，CSP-J的备用软件包里有,双击安装就行了。\n\n官网\n以下使用与mac上的相同\n配置好的vscode\n\n\n几个必装的插件\n首先点击\n\n首先\n搜索Chinese\n然后你能看到\n\n点击\n\n然后重启vscode就可以了\n然后在搜索c\n看到\n\n点击\n\n可能需要重启vscode\n然后你需要一个g++的环境\n还有上古时代的代码编辑神器vim,可能需要一波配置和插件安装\nmac部分首先你可以在自带商店里下载xcode,有点大,下载慢\n或者使用vscode,使用和windows差不多，只有快捷键的不同吧？\nlinux部分你可以先\nsudo apt-get install vim\n\n安装vim,不装也行\n或者\nsudo apt-get install gedit\n\ngedit可能很多linux自带了\n如果嫌太丑陋\nvscode万岁\n官网下载好后，进入住文件夹的下载目录,打开万能终端ubuntu,debian…类linux输入\nsudo dpkg -i 软件包名\n\n万事大吉了\n\n注意，vscode下载已经不支持mac,linux的32位版本了\n\n关于编辑器的部分就讲到这里\n","slug":"入门-编辑器选择","date":"2020-03-08T16:00:00.000Z","categories_index":"","tags_index":"c++","author_index":"lz2019hjh"},{"id":"ceb02f856bcda55a6ade934ea3c2ce08","title":"markdown语法总结","content":"语法高亮#include&lt;bits/stdc++.h>\nusing namespace std;\nint main()\n&#123;\n  return 0;\n&#125;\n\n#include&lt;bits/stdc++.h>\nusing namespace std;\nint main()\n&#123;\n  return 0;\n&#125;\n\n表格|a|b|\n|:-:|:-:|\n|1|2|\n\n\n\n\na\nb\n\n\n\n1\n2\n\n\n图片![头像](https://avatars2.githubusercontent.com/u/56807614?s=96&amp;v=4)\n\n\n超链接[这是我的仓库](https://github.com/lz2019hjh/lz2019hjh.github.io)\n\n这是我的仓库\n单行代码`lz2019hjh`\n\nlz2019hjh\npdf插入测试&lt;center&gt;&lt;embed src=&quot;/pdf/1.pdf&quot; width=&quot;850&quot; height=&quot;600&quot;&gt;&lt;/center&gt;\n\n有点慢\n\n\n数学公式$$\\rho=\\frac{m}{V}$$\n$a^2+b^2=c^2$\n文字显示*asd*\n**asd**\n~~asd~~\n\nasdasdasd\n","slug":"markdown语法总结","date":"2020-03-07T16:00:00.000Z","categories_index":"","tags_index":"markdown","author_index":"lz2019hjh"}]